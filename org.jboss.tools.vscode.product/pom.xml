<?xml version="1.0" encoding="UTF-8"?>
<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<version>1.0.0-SNAPSHOT</version>
		<groupId>org.jboss.tools.vscode</groupId>
		<artifactId>parent</artifactId>
	</parent>
	<artifactId>org.jboss.tools.vscode.product</artifactId>
	<packaging>eclipse-repository</packaging>
	<name>${base.name} :: Product</name>
	<properties>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>archive-repository</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeAllDependencies>true</includeAllDependencies>
					<compress>false</compress>
					<skipArchive>true</skipArchive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<formats>
						<macosx>tar.gz</macosx>
					</formats>
					<products>
						<product>
							<id>languageServer.product</id>
						</product>
					</products>
				</configuration>
				<executions>
					<execution>
						<id>create-distributions</id>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-config-mac</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/repository/config_mac</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/products/languageServer.product/macosx/cocoa/x86_64/Eclipse.app/Contents/Eclipse/configuration</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-config-win</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/repository/config_win</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/products/languageServer.product/win32/win32/x86_64/configuration</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-config-linux</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/repository/config_linux</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/products/languageServer.product/linux/gtk/x86_64/configuration</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>vscode-build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<vscode.location>${env.PWD}</vscode.location>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete>
											<fileset dir="${vscode.location}/server" />
										</delete>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>verify</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${vscode.location}/server</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/target/repository</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>server-distro</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<docker.USER_HOME_DIR>root</docker.USER_HOME_DIR>
				<docker.MAVEN_VERSION>3.3.9</docker.MAVEN_VERSION>
				<docker.GRADLE_VERSION>3.2.1</docker.GRADLE_VERSION>
				<docker.JDT_LS_HOME>/usr/share/jdt_ls</docker.JDT_LS_HOME>
				<docker.skip>true</docker.skip>
			</properties>
			<build>
				<plugins>
					<!-- get major.minor.incremental from this pom, then use 
					 ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
					 to use the x.y.z version without the -SNAPSHOT suffix -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9.1</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<id>parse-version</id>
								<goals>
									<goal>parse-version</goal>
								</goals>
								<configuration>
									<versionString>${project.version}</versionString>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- generate .sha256 file -->
					<plugin>
						<groupId>net.ju-n.maven.plugins</groupId>
						<artifactId>checksum-maven-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<goals>
									<goal>files</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<quiet>true</quiet>
							<csvSummary>false</csvSummary>
							<algorithms>
								<algorithm>SHA-256</algorithm>
							</algorithms>
							<fileSets>
								<fileSet>
									<directory>${project.basedir}/distro/</directory>
									<includes>
										<include>**/*.gz</include>
									</includes>
								</fileSet>
							</fileSets>
						</configuration>
					</plugin>
					<!-- clean leftovers from previous runs -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete quiet="true">
											<fileset dir="${project.basedir}/distro/" />
										</delete>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>pack-for-distribution</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<outputDirectory>distro</outputDirectory>
									<!-- define custom output filename -->
									<finalName>java-server-${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${timestamp}</finalName>
									<appendAssemblyId>false</appendAssemblyId>
									<descriptors>
										<descriptor>publish-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.18.1</version>
						<configuration>
							<images>
								<image>
									<name>jdt_ls</name>
									<build>
										<skip>${docker.skip}</skip>
										<from>openjdk:8-jre-alpine</from>
										<runCmds>
											<run>apk add --update curl tar bash</run>
											<run>rm -rf /var/cache/apk/* </run>
											<run>mkdir -p /usr/share/maven /usr/share/maven/ref</run>
											<run>curl -fsSL http://apache.osuosl.org/maven/maven-3/${docker.MAVEN_VERSION}/binaries/apache-maven-${docker.MAVEN_VERSION}-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1</run>
											<run>ln -s /usr/share/maven/bin/mvn /usr/bin/mvn</run>
											<run>curl https://downloads.gradle.org/distributions/gradle-${docker.GRADLE_VERSION}-bin.zip -o gradle-${docker.GRADLE_VERSION}-bin.zip</run>
											<run>unzip gradle-${docker.GRADLE_VERSION}-bin.zip -d /usr/share/ </run>
											<run>rm -f gradle-${docker.GRADLE_VERSION}-bin.zip</run>
											<run>ln -s /usr/share/gradle-${docker.GRADLE_VERSION} /usr/share/gradle</run>
										</runCmds>
										<env>
											<MAVEN_HOME>/usr/share/maven</MAVEN_HOME>
											<MAVEN_CONFIG>${docker.USER_HOME_DIR}/.m2</MAVEN_CONFIG>
											<GRADLE_HOME>/usr/share/gradle</GRADLE_HOME>
											<GRADLE_USER_HOME>${docker.USER_HOME_DIR}/.gradle</GRADLE_USER_HOME>
											<STDIN_PORT>5001</STDIN_PORT>
											<STDOUT_PORT>5002</STDOUT_PORT>
										</env>
										<assembly>
											<targetDir>${docker.JDT_LS_HOME}</targetDir>
											<descriptor>/publish-assembly.xml</descriptor>
										</assembly>
										<entryPoint>
											<exec>
												<arg>java</arg>
												<arg>-Declipse.application=org.jboss.tools.vscode.java.id1</arg>
												<arg>-Dosgi.bundles.defaultStartLevel=4</arg>
												<arg>-Declipse.product=org.jboss.tools.vscode.java.product</arg>
												<arg>-jar</arg>
												<arg>${docker.JDT_LS_HOME}/plugins/org.eclipse.equinox.launcher_1.4.0.v20160926-1553.jar</arg>
												<arg>-configuration</arg>
												<arg>${docker.JDT_LS_HOME}/config_linux</arg>
												<arg>-data</arg>
												<arg>${docker.USER_HOME_DIR}/workspace</arg>
											</exec>
										</entryPoint>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build-nofork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>